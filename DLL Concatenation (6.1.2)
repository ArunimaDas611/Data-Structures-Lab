#include <stdio.h>
#include <stdlib.h>
#include <string.h>
struct node {
	int data;
	struct node* prev;
	struct node* next;
};
typedef struct node* NODE;
struct DoublyLinkedList {
	NODE head;
	NODE tail;
};
NODE createNode(int x)
{
	NODE temp = (NODE)malloc(sizeof(struct
	                                node*));
	temp -> data = x;
	temp -> prev = NULL;
	temp -> next = NULL;
	return temp;
}
void append(struct DoublyLinkedList* list,
            int x)
{
	NODE temp = createNode(x);
	if(list -> tail == NULL)
	{
		list -> head = temp;
		list -> tail = temp;
	}
	else
	{
		temp -> prev = list -> tail;
		list -> tail -> next = temp;
		list -> tail = temp;
	}
}
void displayList(struct DoublyLinkedList*
                 list)
{
	NODE curr = list -> head;
	while(curr != NULL)
	{
		printf("%d <-> ", curr -> data);
		curr = curr -> next;
	}
	printf("NULL\n");
}
void concatenate(struct DoublyLinkedList*
                 l1, struct DoublyLinkedList* l2)
{
	if(l1 -> tail)
	{
		l1 -> tail -> next = l2 -> head;
		if(l2 -> head != NULL)
		{
			l2 -> head -> prev = l1 -> tail;
		}
		l1 -> tail = l2 -> tail;
	}
	else
	{
		l1 -> head = l2 -> head;
		l1 -> tail = l2 -> tail;
	}
}
int main() {
	struct DoublyLinkedList* list1 =
	    (struct
	     DoublyLinkedList*)malloc(sizeof(struct
	                                     DoublyLinkedList));
	list1->head = NULL;
	list1->tail = NULL;
	struct DoublyLinkedList* list2 =
	    (struct
	     DoublyLinkedList*)malloc(sizeof(struct
	                                     DoublyLinkedList));
	list2->head = NULL;
	list2->tail = NULL;
	int choice, data;
	printf("Elements for List 1 (separated
	       by spaces): ");
		while (1) {
		scanf("%d", &data);
		append(list1, data);
		char c = getchar();
		if (c == '\n') break;
	}
	printf("Elements for List 2 (separated
	       by spaces): ");
		while (1) {
		scanf("%d", &data);
		append(list2, data);
		char c = getchar();
		if (c == '\n') break;
	}
	while (1) {
		printf("1. Display List 1\n");
		printf("2. Display List 2\n");
		printf("3. Concatenate\n");
		printf("4. Quit\n");
		printf("Enter your choice: ");
		scanf("%d", &choice);
		switch (choice) {
		case 1:
			printf("List 1: ");
			displayList(list1);
			break;
		case 2:
			printf("List 2: ");
			displayList(list2);
			break;
		case 3:
			concatenate(list1, list2);
			printf("Lists
			       Concatenated\n");
			       break;
		       case 4:
				       free(list1);
				       free(list2);
				       return 0;
			       default:
					       printf("Invalid choice\n");
				}
	}
	return 0;
}
